apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: fiqa
spec:
  selector:
    matchLabels:
      app: fiqa
      app.kubernetes.io/name: fiqa
      app.kubernetes.io/instance: fiqa
  template:
    metadata:
      labels:
        app: fiqa
        app.kubernetes.io/name: fiqa
        app.kubernetes.io/instance: fiqa
    spec:
      serviceAccountName: fiqa
      securityContext: {}
      containers:
      - name: fiqa
        image: "fiqa:6.1.250"
        # Image that will be used to containers in the cluster
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /manage/health/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 180
        readinessProbe:
          httpGet:
            port: 8080
            path: /manage/health/readiness
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 180
        envFrom:
        - secretRef:
            name: fiqa-rmq-cluster
        - secretRef:
            name: fiqa-db
        - configMapRef:
            name: fiqa-base-config
        - configMapRef:
            name: cc-shared-env-config
        - configMapRef:
            name: cc-shared-monitoring-config            
        env:
        - name: spring.application.name
          value: "fiqa"      
        - name: SPRING_PROFILES_ACTIVE
          value: "cloud,k8"
        - name: JAVA_TOOL_OPTIONS
          value: "-javaagent:/opt/app/opentelemetry-javaagent.jar"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=fiqa"
        - name: management.metrics.export.datadog.api-key
          valueFrom:
            secretKeyRef:
              name: cc-datadog-api-key
              key: value
        - name: monitoring.tags.service
          value: "fiqa"           
